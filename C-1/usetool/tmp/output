Program(18)
    FuncDef(18)
        Type: int
        Header(1)
            ID: main
        CompSt(18)
            VarDec(2)
                Type: int
                ID: a
                ID: b
                ID: n
                ID: t
            Stmt=(4)
                ID: n
                expCall(4)
                    ID: read
            Stmt=(5)
                ID: a
                Int: 1
            Stmt=(6)
                ID: b
                Int: 0
            while(13)
                relop(7)
                    ID: n
                    Int: 0
                CompSt(13)
                    Stmt=(8)
                        ID: t
                        exp+(8)
                            ID: a
                            ID: b
                    Stmt=(9)
                        ID: a
                        ID: b
                    Stmt=(10)
                        ID: b
                        ID: t
                    Stmt=(12)
                        ID: n
                        exp-(12)
                            ID: n
                            Int: 1
            StmtExp(15)
                expCall(15)
                    ID: write
                    RParam(15)
                        ID: b
            return(17)
                Int: 0



-------------------------------------------------
   Num   Name   Type  Dimen  Chain  Width Offset
-------------------------------------------------
     1  write    int      1      0      4      0
     0   read    int      0      0      4      0
-------------------------------------------------
--------------------------
   Num  Index
--------------------------
     0      2
--------------------------
-------------------------------------------------
   Num   Name   Type  Dimen  Chain  Width Offset
-------------------------------------------------
     8     t3    int      0      0      4     24
     7     t2    int      0      0      4     20
     6     t1    int      0      0      4     16
     5      t    int      0      0      4     12
     4      n    int      0      0      4      8
     3      b    int      0      0      4      4
     2      a    int      0      0      4      0
     1  write    int      1      0      4      0
     0   read    int      0      0      4      0
-------------------------------------------------
--------------------------
   Num  Index
--------------------------
     1      2
     0      2
--------------------------
-------------------------------------------------
   Num   Name   Type  Dimen  Chain  Width Offset
-------------------------------------------------
     9     t4    int      0      0      4     28
     8     t3    int      0      0      4     24
     7     t2    int      0      0      4     20
     6     t1    int      0      0      4     16
     5      t    int      0      0      4     12
     4      n    int      0      0      4      8
     3      b    int      0      0      4      4
     2      a    int      0      0      4      0
     1  write    int      1      0      4      0
     0   read    int      0      0      4      0
-------------------------------------------------
--------------------------
   Num  Index
--------------------------
     1      2
     0      2
--------------------------

FUNCTION main :
  t1 := CALL read
  n := t1
  a := #1
  b := #0
LABEL label1 :
  IF FALSE n != #0 GOTO label2
  t2 := a + b
  t := t2
  a := b
  b := t
  t3 := n - #1
  n := t3
  GOTO label1
LABEL label2 :
  ARG b
  t4 := CALL write
  RETURN 



.data
_prompt: .asciiz "Enter an integer:"
_space: .asciiz "\ "
.globl main
.text
main:
	jal read
	sw $v0, 16($sp)
	lw $t1, 16($sp)
	sw $t1, 8($sp)
	li $t1, 1
	sw $t1, 0($sp)
	li $t1, 0
	sw $t1, 4($sp)
label1:
	lw $t1, 8($sp)
	li $t2, 0
	beq $t1, $t2, label2
	lw $t1, 0($sp)
	lw $t2, 4($sp)
	add $t3, $t1, $t2
	sw $t3, 20($sp)
	lw $t1, 20($sp)
	sw $t1, 12($sp)
	lw $t1, 4($sp)
	sw $t1, 0($sp)
	lw $t1, 12($sp)
	sw $t1, 4($sp)
	lw $t1, 8($sp)
	li $t2, 1
	sub $t3, $t1, $t2
	sw $t3, 24($sp)
	lw $t1, 24($sp)
	sw $t1, 8($sp)
	b label1
label2:
	lw $t1, 4($sp)
	move $a0, $t1
	jal write
	sw $v0, 28($sp)
	li $v0, 0
	jr $ra
read:
	li $v0, 4
	la $a0, _prompt
	syscall
	li $v0, 5
	syscall
	jr $ra

write:
	li $v0, 1
	syscall
	li $v0, 4
	la $a0, _space
	syscall
	move $v0, $0
	jr $ra

